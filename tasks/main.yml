---
# tasks file for owncloud
- name: install requirements
  package:
    name: "{{ item }}"
  with_items:
    - "{{ owncloud_configuration[ansible_distribution]['requirements'] }}"

- name: modify selinux settings
  seboolean:
    name: "{{ item }}"
    state: yes
    persistent: yes
  when:
    - ansible_selinux.status is defined
    - ansible_selinux.status == "enabled"
  with_items:
    - "{{ owncloud_sebooleans }}"

- name: install software
  unarchive:
    src: "{{ owncloud_archive }}"
    dest: "{{ owncloud_configuration[ansible_distribution]['destination'] }}"
    remote_src: yes
    owner: "{{ owncloud_configuration[ansible_distribution]['httpd_owner'] }}"
    group: "{{ owncloud_configuration[ansible_distribution]['httpd_group'] }}"
    creates: "{{ owncloud_configuration[ansible_distribution]['destination'] }}/owncloud"

- name: place owncloud.conf
  template:
    src: owncloud.conf.j2
    dest: "{{ owncloud_configuration[ansible_distribution]['config_directory'] }}/owncloud.conf"
  notify:
    - restart httpd

- name: configure owncloud
  command: php occ maintenance:install --database "mysql" --database-name "{{ owncloud_database_name }}" --database-user "{{ owncloud_database_user }}" --database-pass "{{ owncloud_database_pass }}" --admin-user "{{ owncloud_database_admin_user }}" --admin-pass "{{ owncloud_database_admin_pass }}"
  args:
    creates: "{{ owncloud_configuration[ansible_distribution]['destination'] }}/owncloud/config/config.php"
    chdir: "{{ owncloud_configuration[ansible_distribution]['destination'] }}/owncloud"
  become_user: "{{ owncloud_configuration[ansible_distribution]['httpd_owner'] }}"
  become: yes
  when:
    - ansible_virtualization_type != "docker"

- name: set permissions
  file:
    name: "{{ item.name }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items:
    - "{{ owncloud_permissions }}"

- name: set owncloud trusted domains
  lineinfile:
    path: "{{ owncloud_configuration[ansible_distribution]['destination'] }}/owncloud/config/config.php"
    regexp: "    0 => '"
    line: "    0 => '{{ ansible_default_ipv4.address }}'"

- name: start php-fpm
  service:
    name: php-fpm
    state: started
    enabled: true
